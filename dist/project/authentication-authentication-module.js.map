{"version":3,"sources":["./src/app/authentication/authentication.module.ts","./src/app/authentication/authentication.routing.ts","./src/app/authentication/login/login.component.ts","./src/app/authentication/login/login.component.html","./src/app/authentication/register/register.component.ts","./src/app/authentication/register/register.component.html"],"names":[],"mappings":"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","file":"authentication-authentication-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { CommonModule } from '@angular/common';\nimport {\n    MatIconModule\n} from '@angular/material/icon';\nimport {\n    MatCardModule,\n} from '@angular/material/card';\nimport {\n    MatInputModule\n} from '@angular/material/input';\nimport {\n    MatCheckboxModule\n} from '@angular/material/checkbox';\nimport {\n    MatButtonModule\n} from '@angular/material/button';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { FlexLayoutModule } from '@angular/flex-layout';\n\nimport { AuthenticationRoutes } from './authentication.routing';\nimport { LoginComponent } from './login/login.component';\nimport { RegisterComponent } from './register/register.component';\n\nimport { SharedModule } from '../shared/shared.module';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        RouterModule.forChild(AuthenticationRoutes),\n        MatIconModule,\n        MatCardModule,\n        MatInputModule,\n        MatCheckboxModule,\n        MatButtonModule,\n        FlexLayoutModule,\n        FormsModule,\n        ReactiveFormsModule,\n        SharedModule\n    ],\n    declarations: [\n        LoginComponent,\n        RegisterComponent\n    ]\n})\nexport class AuthenticationModule { }\n","import { Routes } from '@angular/router';\n\nimport { ErrorComponent } from './error/error.component';\nimport { LoginComponent } from './login/login.component';\nimport { RegisterComponent } from './register/register.component';\nexport const AuthenticationRoutes: Routes = [\n  {\n    path: '',\n    children: [\n      {\n        path: 'login',\n        component: LoginComponent\n      },\n      {\n        path: 'register',\n        component: RegisterComponent\n      },\n      {\n        path: '',\n        redirectTo: 'login',\n        pathMatch: 'full'\n      },\n    ]\n  }\n];\n","import { Component, OnDestroy, OnInit, ViewChild } from '@angular/core';\nimport { Router } from '@angular/router';\nimport {\n  FormBuilder,\n  FormGroup,\n  Validators\n} from '@angular/forms';\nimport { AuthService } from 'src/app/modules/core/services/auth/auth.service';\nimport { TecnicoService } from 'src/app/modules/core/services/tecnico/tecnico.service';\nimport { LoadingComponent } from 'src/app/shared/loading/loading.component';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit, OnDestroy {\n\n  @ViewChild(LoadingComponent) loading: LoadingComponent;\n\n  public form: FormGroup = Object.create(null);\n\n  constructor(\n    private fb: FormBuilder,\n    public authService: AuthService,\n    private router: Router,\n    private tecnicoService: TecnicoService,\n  ) { }\n\n  ngOnInit() {\n    const hasUser$ = this.authService.hasUser();\n    if (hasUser$) {\n      this.fetchTecnico();\n      this.router.navigate(['agricultores']);\n    }\n    this.form = this.fb.group({\n      uname: [null, Validators.compose([Validators.required])],\n      password: [null, Validators.compose([Validators.required])]\n    });\n  }\n\n  ngOnDestroy(): void {\n    this.loading.destroy();\n  }\n\n  async onSubmit() {\n    this.loading.open();\n    this.authService.setPersistance().then(() => {\n      this.authService.signIn(this.form.value.uname, this.form.value.password)\n      .then(async () => {\n        await this.fetchTecnico();\n        this.loading.success('Listo', 'Usuario ingresado correctamente');\n        setTimeout(() => {\n          this.router.navigate(['agricultores']);\n        }, 1000);\n      }).catch((error) => {\n        this.loading.error('Error', 'Usuario o contraseña incorrecta');\n      });\n    });\n  }\n\n  fetchTecnico(): Promise<void> {\n    return new Promise<void>((resolve, reject) => {\n      this.authService.getUser().subscribe(async user => {\n        if (user !== null) {\n          const loggedTecnico = await this.tecnicoService.get(user.uid);\n          const storedTecnico = {\n            nombre: loggedTecnico.nombre,\n            permiso: loggedTecnico.permiso\n          };\n          localStorage.setItem('user', JSON.stringify(storedTecnico));\n          resolve();\n        }\n      });\n    });\n  }\n\n}\n","<div class=\"login-register\" style=\"background-image:url(assets/images/background/background2.jpg);\">\n    <app-loading></app-loading>\n    <div class=\"login-register-box\">\n        <mat-card>\n            <mat-card-content>\n                <form [formGroup]=\"form\" (ngSubmit)=\"onSubmit()\">\n                    <div class=\"text-center\">\n                        <img alt=\"homepage\" src=\"assets/images/logo.png\" style=\"max-width: 130px ;\">\n                        <h4 class=\"m-t-0\">Inicio de Sesión</h4>\n                    </div>\n\n                    <div fxLayout=\"row wrap\">\n                        <!-- col full-->\n                        <div fxFlex.gt-sm=\"100\" fxFlex.gt-xs=\"100\" fxFlex=\"100\">\n                            <mat-form-field>\n                                <input matInput placeholder=\"Usuario\" [formControl]=\"form.controls['uname']\">\n                            </mat-form-field>\n                            <small *ngIf=\"form.controls['uname'].hasError('required') && form.controls['uname'].touched\"\n                                class=\"text-danger support-text\">Usuario is obligatorio.</small>\n                        </div>\n                        <!-- col full-->\n                        <div fxFlex.gt-sm=\"100\" fxFlex.gt-xs=\"100\" fxFlex=\"100\">\n                            <mat-form-field>\n                                <input matInput type=\"password\" placeholder=\"Contraseña\"\n                                    [formControl]=\"form.controls['password']\">\n                            </mat-form-field>\n                            <small\n                                *ngIf=\"form.controls['password'].hasError('required') && form.controls['password'].touched\"\n                                class=\"text-danger support-text\">Contraseña es oblogatoria.</small>\n                        </div>\n                        <!-- col half-->\n                        <div fxFlex.gt-sm=\"50\" fxFlex.gt-xs=\"50\">\n                            <mat-checkbox color=\"warn\">Recuérdame</mat-checkbox>\n                        </div>\n                        <!-- col half-->\n                        <div fxFlex.gt-sm=\"50\" fxFlex.gt-xs=\"50\" class=\"text-right\">\n                            <a [routerLink]=\"['/authentication/forgot']\" class=\"link\">Olvidaste contraseña?</a>\n                        </div>\n                        <!-- col full-->\n                        <div fxFlex.gt-sm=\"100\" fxFlex.gt-xs=\"100\" fxFlex=\"100\">\n                            <button mat-raised-button class=\"btn-block btn-lg m-t-20 m-b-20\"\n                                style=\"background-color: #076533; color: white;\" type=\"submit\"\n                                [disabled]=\"!form.valid\">Ingresar</button>\n                        </div>\n                        <!-- col full-->\n                        <!-- <div fxFlex.gt-sm=\"100\" fxFlex.gt-xs=\"100\" fxFlex=\"100\" class=\"text-center\">\n                            <span>Don't have an account?\n                                <a [routerLink]=\"['/authentication/register']\" class=\"text-info link\">Registro</a>\n                            </span>\n                        </div> -->\n                    </div>\n                </form>\n            </mat-card-content>\n        </mat-card>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport {\n  FormBuilder,\n  FormGroup,\n  Validators,\n  FormControl\n} from '@angular/forms';\nimport { CustomValidators } from 'ngx-custom-validators';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { AuthService } from 'src/app/modules/core/services/auth/auth.service';\n\n\nconst password = new FormControl('', Validators.required);\nconst confirmPassword = new FormControl('');\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.scss']\n})\nexport class RegisterComponent implements OnInit {\n\n  public form: FormGroup = Object.create(null);\n\n  constructor(\n    private fb: FormBuilder,\n    private router: Router,\n    private authService: AuthService,\n    private snackBar: MatSnackBar\n  ) { }\n\n  ngOnInit() {\n    this.form = this.fb.group({\n      email: [\n        null,\n        Validators.compose([Validators.required])\n      ],\n      password: password,\n      confirmPassword: confirmPassword\n    });\n  }\n\n  onSubmit() {\n    this.authService.signUp(this.form.value.email, this.form.value.password)\n      .then(() => {\n        this.snackBar.open('Registro de cuenta exitosa', 'Ok!', {\n          duration: 5000,\n        });\n        this.router.navigate(['']);\n      }).catch((error) => console.log(error));\n  }\n}\n","<div class=\"login-register\" style=\"background-image:url(assets/images/background/login-register.jpg);\">\n  <div class=\"login-register-box\">\n    <mat-card>\n      <mat-card-content>\n        <form [formGroup]=\"form\" (ngSubmit)=\"onSubmit()\">\n          <div class=\"text-center\">\n            <img alt=\"homepage\" src=\"assets/images/logo-icon.png\">\n            <h4 class=\"m-t-0\">Register to App</h4>\n          </div>\n          <div fxLayout=\"row wrap\">\n            <!-- col full-->\n            <div fxFlex.gt-sm=\"100\" fxFlex.gt-xs=\"100\" fxFlex=\"100\">\n              <mat-form-field style=\"width: 100%\">\n                <input matInput placeholder=\"Email address\" type=\"email\" [formControl]=\"form.controls['email']\">\n              </mat-form-field>\n              <small *ngIf=\"form.controls['email'].hasError('required') && form.controls['email'].touched\" class=\"text-danger support-text\">You must include an email address.</small>\n              <small *ngIf=\"form.controls['email'].errors?.email && form.controls['email'].touched\" class=\"text-danger support-text\">You must include a valid email address.</small>\n            </div>\n            <!-- col full-->\n            <div fxFlex.gt-sm=\"100\" fxFlex.gt-xs=\"100\" fxFlex=\"100\">\n              <mat-form-field style=\"width: 100%\">\n                <input matInput type=\"password\" placeholder=\"Password\" [formControl]=\"form.controls['password']\">\n              </mat-form-field>\n              <small *ngIf=\"form.controls['password'].hasError('required') && form.controls['password'].touched\" class=\"text-danger support-text\">You must include password.</small>\n            </div>\n            <!-- col full-->\n            <div fxFlex.gt-sm=\"100\" fxFlex.gt-xs=\"100\" fxFlex=\"100\">\n              <mat-form-field style=\"width: 100%\">\n                <input matInput placeholder=\"Confirm Password\" [formControl]=\"form.controls['confirmPassword']\" type=\"password\">\n              </mat-form-field>\n              <small *ngIf=\"form.controls['confirmPassword'].hasError('required') && form.controls['confirmPassword'].touched\" class=\"text-danger support-text\">You must include confirm password.</small>\n              <small *ngIf=\"form.controls['confirmPassword'].errors?.equalTo\" class=\"text-danger support-text\">Passwords do not math.</small>\n            </div>\n            <!-- col full-->\n            <div fxFlex.gt-sm=\"100\" fxFlex.gt-xs=\"100\" fxFlex=\"100\">\n              <mat-checkbox class=\"font-14\">I agree to the all\n                <a href=\"javascript:void(0)\" class=\"link text-info\">terms</a>.</mat-checkbox>\n            </div>\n            <button mat-raised-button color=\"primary\" class=\"btn-block btn-lg m-t-20 m-b-20\" type=\"submit\" [disabled]=\"!form.valid\">Create your account</button>\n\n            <div class=\"text-center\" fxFlex.gt-sm=\"100\" fxFlex.gt-xs=\"100\" fxFlex=\"100\">\n              <span>Already have an account?\n                <a [routerLink]=\"['/authentication/login']\" class=\"link text-info\"> Login</a>\n              </span>\n            </div>\n          </div>\n        </form>\n      </mat-card-content>\n    </mat-card>\n  </div>\n</div>"],"sourceRoot":"webpack:///"}